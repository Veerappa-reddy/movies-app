{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieItemDetails/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Loader from 'react-loader-spinner';\nimport { format } from 'date-fns';\nimport Header from '../Header';\nimport PopularMovieItem from '../PopularMovieItem';\nimport './index.css';\nimport Footer from '../Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass MovieItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieDetails: {},\n      apiStatus: apiStatusConstants.initial\n    };\n\n    this.getMovieItemDetails = async () => {\n      this.setState({\n        apiStatus: apiStatusConstants.inProgress\n      });\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      console.log(id);\n      const url = `https://apis.ccbp.in/movies-app/movies/${id}`;\n      const jwtToken = Cookies.get('jwt_token');\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n      const response = await fetch(url, options);\n\n      if (response.ok === true) {\n        const data = await response.json();\n        const updatedData = {\n          adult: data.movie_details.adult,\n          backdropPath: data.movie_details.backdrop_path,\n          budget: data.movie_details.budget,\n          genres: data.movie_details.genres.map(eachGenre => ({\n            id: eachGenre.id,\n            name: eachGenre.name\n          })),\n          id: data.movie_details.id,\n          overview: data.movie_details.overview,\n          posterPath: data.movie_details.poster_path,\n          releaseDate: data.movie_details.release_date,\n          runtime: data.movie_details.runtime,\n          similarMovies: data.movie_details.similar_movies.map(eachMovie => ({\n            backdropPath: eachMovie.backdrop_path,\n            id: eachMovie.id,\n            posterPath: eachMovie.poster_path,\n            title: eachMovie.title\n          })),\n          spokenLanguages: data.movie_details.spoken_languages.map(each => ({\n            id: each.id,\n            englishName: each.english_name\n          })),\n          title: data.movie_details.title,\n          voteAverage: data.movie_details.vote_average,\n          voteCount: data.movie_details.vote_count\n        };\n        this.setState({\n          movieDetails: updatedData,\n          apiStatus: apiStatusConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiStatusConstants.failure\n        });\n      }\n    };\n\n    this.renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-color\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-loader-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader-container\",\n          testid: \"loader\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"TailSpin\",\n            color: \"#D81F26\",\n            height: 50,\n            width: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this);\n\n    this.renderMovieDetailsView = () => {\n      const {\n        movieDetails\n      } = this.state;\n      const {\n        adult,\n        backdropPath,\n        title,\n        releaseDate,\n        runtime,\n        overview,\n        genres,\n        spokenLanguages,\n        voteCount,\n        voteAverage,\n        budget,\n        similarMovies\n      } = movieDetails;\n      const inHours = Math.floor(runtime / 60);\n      const inMinutes = Math.floor(runtime % 60);\n      const runtimeFormat = `${inHours}h ${inMinutes}m`;\n      const certificateName = adult ? 'A' : 'U/A';\n      const releaseYear = format(new Date(releaseDate), 'yyyy');\n      const releaseDateFormat = format(new Date(releaseDate), 'do MMMM yyyy');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-bg-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: `url(${backdropPath})`\n          },\n          className: \"movie-details-container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"movie-tilte\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"more-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"runtime-format\",\n                children: runtimeFormat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"sensor-certificate\",\n                children: certificateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: releaseYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-overview\",\n              children: overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"movie-play-btn\",\n              children: \"Play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"other-details-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genres-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"genre-heading\",\n              children: \"Genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"\",\n              children: genres.map(each => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"genre\",\n                children: each.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genres-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"genre-heading\",\n              children: \"Audio Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: spokenLanguages.map(each => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"genre\",\n                children: each.englishName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genres-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"genre-heading\",\n              children: \"Rating Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genre\",\n              children: voteCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"genre-heading\",\n              children: \"Rating Average\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genre\",\n              children: voteAverage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genres-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"genre-heading\",\n              children: \"Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: budget\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"genre-heading\",\n              children: \"Release Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: releaseDateFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"similar-movies-bg-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"more-like-heading\",\n            children: \"More like this\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"similar-movies-unorderlist\",\n            children: similarMovies.map(eachMovie => /*#__PURE__*/_jsxDEV(PopularMovieItem, {\n              movieDetails: eachMovie\n            }, eachMovie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderApiStatus = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderMovieDetailsView();\n\n        case apiStatusConstants.failure:\n          return this.renderFailureView();\n\n        case apiStatusConstants.inProgress:\n          return this.renderLoadingView();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getMovieItemDetails();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.renderApiStatus()\n    }, void 0, false);\n  }\n\n}\n\nexport default MovieItemDetails; //  <div className=\"other-details-container\">\n//             <div className=\"genres-container\">\n//               <h1 className=\"genre-heading\">Genres</h1>\n//               <ul className=\"\">\n//                 {genres.map(each => (\n//                   <p className=\"genre\">{each.name}</p>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div className=\"genres-container\">\n//               <h1 className=\"genre-heading\">Audio Available</h1>\n//               <ul>\n//                 {spokenLanguages.map(each => (\n//                   <p className=\"genre\">{each.englishName}</p>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div className=\"genres-container\">\n//               <h1 className=\"genre-heading\">Rating Count</h1>\n//               <p className=\"genre\">{voteCount}</p>\n//               <h1 className=\"genre-heading\">Rating Average</h1>\n//               <p className=\"genre\">{voteAverage}</p>\n//             </div>\n//             <div className=\"genres-container\">\n//               <h1 className=\"genre-heading\">Budget</h1>\n//               <p>{budget}</p>\n//               <h1 className=\"genre-heading\">Release Date</h1>\n//               <p>{releaseDateFormat}</p>\n//             </div>\n//           </div>","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieItemDetails/index.js"],"names":["Component","Cookies","Loader","format","Header","PopularMovieItem","Footer","apiStatusConstants","initial","success","failure","inProgress","MovieItemDetails","state","movieDetails","apiStatus","getMovieItemDetails","setState","match","props","params","id","console","log","url","jwtToken","get","options","method","headers","Authorization","response","fetch","ok","data","json","updatedData","adult","movie_details","backdropPath","backdrop_path","budget","genres","map","eachGenre","name","overview","posterPath","poster_path","releaseDate","release_date","runtime","similarMovies","similar_movies","eachMovie","title","spokenLanguages","spoken_languages","each","englishName","english_name","voteAverage","vote_average","voteCount","vote_count","renderLoadingView","renderMovieDetailsView","inHours","Math","floor","inMinutes","runtimeFormat","certificateName","releaseYear","Date","releaseDateFormat","backgroundImage","renderApiStatus","renderFailureView","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {format} from 'date-fns'\nimport Header from '../Header'\nimport PopularMovieItem from '../PopularMovieItem'\nimport './index.css'\nimport Footer from '../Footer'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass MovieItemDetails extends Component {\n  state = {movieDetails: {}, apiStatus: apiStatusConstants.initial}\n\n  componentDidMount() {\n    this.getMovieItemDetails()\n  }\n\n  getMovieItemDetails = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    console.log(id)\n\n    const url = `https://apis.ccbp.in/movies-app/movies/${id}`\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = {\n        adult: data.movie_details.adult,\n        backdropPath: data.movie_details.backdrop_path,\n        budget: data.movie_details.budget,\n        genres: data.movie_details.genres.map(eachGenre => ({\n          id: eachGenre.id,\n          name: eachGenre.name,\n        })),\n        id: data.movie_details.id,\n        overview: data.movie_details.overview,\n        posterPath: data.movie_details.poster_path,\n        releaseDate: data.movie_details.release_date,\n        runtime: data.movie_details.runtime,\n        similarMovies: data.movie_details.similar_movies.map(eachMovie => ({\n          backdropPath: eachMovie.backdrop_path,\n          id: eachMovie.id,\n          posterPath: eachMovie.poster_path,\n          title: eachMovie.title,\n        })),\n        spokenLanguages: data.movie_details.spoken_languages.map(each => ({\n          id: each.id,\n          englishName: each.english_name,\n        })),\n        title: data.movie_details.title,\n        voteAverage: data.movie_details.vote_average,\n        voteCount: data.movie_details.vote_count,\n      }\n      this.setState({\n        movieDetails: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"nav-color\">\n      <Header />\n      <div className=\"movie-details-loader-container\">\n        <div className=\"loader-container\" testid=\"loader\">\n          <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n        </div>\n      </div>\n    </div>\n  )\n\n  renderMovieDetailsView = () => {\n    const {movieDetails} = this.state\n    const {\n      adult,\n      backdropPath,\n      title,\n      releaseDate,\n      runtime,\n      overview,\n      genres,\n      spokenLanguages,\n      voteCount,\n      voteAverage,\n      budget,\n      similarMovies,\n    } = movieDetails\n    const inHours = Math.floor(runtime / 60)\n    const inMinutes = Math.floor(runtime % 60)\n    const runtimeFormat = `${inHours}h ${inMinutes}m`\n    const certificateName = adult ? 'A' : 'U/A'\n    const releaseYear = format(new Date(releaseDate), 'yyyy')\n    const releaseDateFormat = format(new Date(releaseDate), 'do MMMM yyyy')\n\n    return (\n      <div className=\"movie-details-bg-container\">\n        <div\n          style={{backgroundImage: `url(${backdropPath})`}}\n          className=\"movie-details-container\"\n        >\n          <Header />\n          <div className=\"movie-details\">\n            <h1 className=\"movie-tilte\">{title}</h1>\n            <div className=\"more-details\">\n              <h3 className=\"runtime-format\">{runtimeFormat}</h3>\n              <h3 className=\"sensor-certificate\">{certificateName}</h3>\n              <h3>{releaseYear}</h3>\n            </div>\n            <p className=\"movie-overview\">{overview}</p>\n            <button type=\"button\" className=\"movie-play-btn\">\n              Play\n            </button>\n          </div>\n        </div>\n        <div className=\"other-details-container\">\n          <div className=\"genres-container\">\n            <h1 className=\"genre-heading\">Genres</h1>\n            <ul className=\"\">\n              {genres.map(each => (\n                <p className=\"genre\">{each.name}</p>\n              ))}\n            </ul>\n          </div>\n          <div className=\"genres-container\">\n            <h1 className=\"genre-heading\">Audio Available</h1>\n            <ul>\n              {spokenLanguages.map(each => (\n                <p className=\"genre\">{each.englishName}</p>\n              ))}\n            </ul>\n          </div>\n          <div className=\"genres-container\">\n            <h1 className=\"genre-heading\">Rating Count</h1>\n            <p className=\"genre\">{voteCount}</p>\n            <h1 className=\"genre-heading\">Rating Average</h1>\n            <p className=\"genre\">{voteAverage}</p>\n          </div>\n          <div className=\"genres-container\">\n            <h1 className=\"genre-heading\">Budget</h1>\n            <p>{budget}</p>\n            <h1 className=\"genre-heading\">Release Date</h1>\n            <p>{releaseDateFormat}</p>\n          </div>\n        </div>\n        <div className=\"similar-movies-bg-container\">\n          <h1 className=\"more-like-heading\">More like this</h1>\n          <ul className=\"similar-movies-unorderlist\">\n            {similarMovies.map(eachMovie => (\n              <PopularMovieItem movieDetails={eachMovie} key={eachMovie.id} />\n            ))}\n          </ul>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n\n  renderApiStatus = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderMovieDetailsView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <>{this.renderApiStatus()}</>\n  }\n}\n\nexport default MovieItemDetails\n\n//  <div className=\"other-details-container\">\n//             <div className=\"genres-container\">\n//               <h1 className=\"genre-heading\">Genres</h1>\n//               <ul className=\"\">\n//                 {genres.map(each => (\n//                   <p className=\"genre\">{each.name}</p>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div className=\"genres-container\">\n//               <h1 className=\"genre-heading\">Audio Available</h1>\n//               <ul>\n//                 {spokenLanguages.map(each => (\n//                   <p className=\"genre\">{each.englishName}</p>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div className=\"genres-container\">\n//               <h1 className=\"genre-heading\">Rating Count</h1>\n//               <p className=\"genre\">{voteCount}</p>\n//               <h1 className=\"genre-heading\">Rating Average</h1>\n//               <p className=\"genre\">{voteAverage}</p>\n//             </div>\n//             <div className=\"genres-container\">\n//               <h1 className=\"genre-heading\">Budget</h1>\n//               <p>{budget}</p>\n//               <h1 className=\"genre-heading\">Release Date</h1>\n//               <p>{releaseDateFormat}</p>\n//             </div>\n//           </div>\n"]},"metadata":{},"sourceType":"module"}