{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieDetails/index.js\";\nimport { Component } from 'react';\nimport { format } from 'date-fns';\nimport Loader from 'react-loader-spinner';\nimport Cookies from 'js-cookie';\nimport Header from '../Header'; // import SimilarMovies from '../SimilarMovies'\n\nimport Footer from '../Footer'; // import FailurePage from '../FailurePage'\n\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AvailableLanguages = props => {\n  const {\n    eachItem\n  } = props;\n  const {\n    englishName\n  } = eachItem;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"info-items list-item\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: englishName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AvailableLanguages;\n\nconst GenreList = props => {\n  const {\n    eachItem\n  } = props;\n  const {\n    name\n  } = eachItem;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"info-items list-item\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = GenreList;\nconst renderConstraints = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  fail: 'FAIL',\n  loading: 'LOADING'\n};\n\nclass MovieDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieDetailsList: [],\n      renderStatus: renderConstraints.initial\n    };\n\n    this.getMovieDetails = async () => {\n      this.setState({\n        renderStatus: renderConstraints.loading\n      });\n      const jwtToken = Cookies.get('jwt_token');\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      const movieDetailsApi = `https://apis.ccbp.in/movies-app/movies/${id}`;\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n      const response = await fetch(movieDetailsApi, options);\n\n      if (response.ok) {\n        const data = await response.json();\n        const updatedGenreList = data.movie_details.genres.map(eachGenre => ({\n          id: eachGenre.id,\n          name: eachGenre.name\n        }));\n        const updatedSimilarMovies = data.movie_details.similar_movies.map(eachMovie => ({\n          backdropPath: eachMovie.backdrop_path,\n          id: eachMovie.id,\n          posterPath: eachMovie.poster_path,\n          title: eachMovie.title\n        }));\n        const updatedSpokenLanguages = data.movie_details.spoken_languages.map(eachLanguage => ({\n          id: eachLanguage.id,\n          englishName: eachLanguage.english_name\n        }));\n        const updatedData = {\n          adult: data.movie_details.adult,\n          backdropPath: data.movie_details.backdrop_path,\n          budget: data.movie_details.budget,\n          genres: updatedGenreList,\n          id: data.movie_details.id,\n          overview: data.movie_details.overview,\n          posterPath: data.movie_details.poster_path,\n          releaseDate: data.movie_details.release_date,\n          runtime: data.movie_details.runtime,\n          similarMovies: updatedSimilarMovies,\n          spokenLanguages: updatedSpokenLanguages,\n          title: data.movie_details.title,\n          voteAverage: data.movie_details.vote_average,\n          voteCount: data.movie_details.vote_count\n        };\n        this.setState({\n          movieDetailsList: updatedData,\n          renderStatus: renderConstraints.success\n        });\n      } else {\n        this.setState({\n          renderStatus: renderConstraints.fail\n        });\n      }\n    };\n\n    this.tryAgainMoviesData = () => {\n      this.getMovieDetails();\n    };\n\n    this.renderLoaderView = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader-container\",\n        testid: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"TailSpin\",\n          color: \"#D81F26\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FailurePage, {\n        tryAgain: this.tryAgainMoviesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n\n    this.renderSuccessView = () => {\n      const {\n        movieDetailsList\n      } = this.state;\n      const {\n        adult,\n        backdropPath,\n        budget,\n        genres,\n        overview,\n        releaseDate,\n        runtime,\n        similarMovies,\n        spokenLanguages,\n        title,\n        voteAverage,\n        voteCount\n      } = movieDetailsList;\n      const inHours = Math.floor(runtime / 60);\n      const inMinutes = runtime % 60;\n      const runTimeInHoursAndMinutes = `${inHours}h ${inMinutes}m`;\n      const certificateName = adult ? 'A' : 'U/A';\n      const releaseYear = format(new Date(releaseDate), 'yyyy');\n      const releaseDateFormat = format(new Date(releaseDate), 'do MMMM yyyy');\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: `url(${backdropPath})`\n          },\n          className: \"movie-detail-page\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-detail-movie-page\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"title\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"more-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"duration\",\n                children: runTimeInHoursAndMinutes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"certificate\",\n                children: certificateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"release-year\",\n                children: releaseYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"over-view\",\n              children: overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"play-btn\",\n              children: \"Play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additional-information\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"info-heading\",\n                children: \"Genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-items\",\n                children: genres.map(eachItem => /*#__PURE__*/_jsxDEV(GenreList, {\n                  eachItem: eachItem\n                }, eachItem.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"info-heading\",\n                children: \"Audio Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-items\",\n                children: spokenLanguages.map(eachItem => /*#__PURE__*/_jsxDEV(AvailableLanguages, {\n                  eachItem: eachItem\n                }, eachItem.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"info-heading\",\n                children: \"Rating Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"info-items info-name\",\n                children: voteCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"info-heading\",\n                children: \"Rating Average\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"info-items info-name\",\n                children: voteAverage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info info1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"info-heading\",\n                children: \"Budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"info-items info-name\",\n                children: budget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"info-heading\",\n                children: \"Release Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"info-items info-name\",\n                children: releaseDateFormat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"similar-movies-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"more-like-this-text\",\n              children: \"More like this\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"similar-movies-list\",\n              children: similarMovies.map(eachMovie => /*#__PURE__*/_jsxDEV(SimilarMovies, {\n                eachMovie: eachMovie\n              }, eachMovie.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.renderSwitchView = () => {\n      const {\n        renderStatus\n      } = this.state;\n\n      switch (renderStatus) {\n        case renderConstraints.loading:\n          return this.renderLoaderView();\n\n        case renderConstraints.success:\n          return this.renderSuccessView();\n\n        case renderConstraints.fail:\n          return this.renderFailureView();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getMovieDetails();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.renderSwitchView()\n    }, void 0, false);\n  }\n\n}\n\nexport default MovieDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AvailableLanguages\");\n$RefreshReg$(_c2, \"GenreList\");","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieDetails/index.js"],"names":["Component","format","Loader","Cookies","Header","Footer","AvailableLanguages","props","eachItem","englishName","GenreList","name","renderConstraints","initial","success","fail","loading","MovieDetails","state","movieDetailsList","renderStatus","getMovieDetails","setState","jwtToken","get","match","params","id","movieDetailsApi","options","method","headers","Authorization","response","fetch","ok","data","json","updatedGenreList","movie_details","genres","map","eachGenre","updatedSimilarMovies","similar_movies","eachMovie","backdropPath","backdrop_path","posterPath","poster_path","title","updatedSpokenLanguages","spoken_languages","eachLanguage","english_name","updatedData","adult","budget","overview","releaseDate","release_date","runtime","similarMovies","spokenLanguages","voteAverage","vote_average","voteCount","vote_count","tryAgainMoviesData","renderLoaderView","renderFailureView","renderSuccessView","inHours","Math","floor","inMinutes","runTimeInHoursAndMinutes","certificateName","releaseYear","Date","releaseDateFormat","backgroundImage","renderSwitchView","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport {format} from 'date-fns'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport Header from '../Header'\n// import SimilarMovies from '../SimilarMovies'\nimport Footer from '../Footer'\n// import FailurePage from '../FailurePage'\n\nimport './index.css'\n\nconst AvailableLanguages = props => {\n  const {eachItem} = props\n  const {englishName} = eachItem\n  return (\n    <li className=\"info-items list-item\">\n      <p>{englishName}</p>\n    </li>\n  )\n}\n\nconst GenreList = props => {\n  const {eachItem} = props\n  const {name} = eachItem\n  return (\n    <li className=\"info-items list-item\">\n      <p>{name}</p>\n    </li>\n  )\n}\n\nconst renderConstraints = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  fail: 'FAIL',\n  loading: 'LOADING',\n}\n\nclass MovieDetails extends Component {\n  state = {movieDetailsList: [], renderStatus: renderConstraints.initial}\n\n  componentDidMount() {\n    this.getMovieDetails()\n  }\n\n  getMovieDetails = async () => {\n    this.setState({renderStatus: renderConstraints.loading})\n    const jwtToken = Cookies.get('jwt_token')\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const movieDetailsApi = `https://apis.ccbp.in/movies-app/movies/${id}`\n    const options = {\n      method: 'GET',\n      headers: {Authorization: `Bearer ${jwtToken}`},\n    }\n    const response = await fetch(movieDetailsApi, options)\n    if (response.ok) {\n      const data = await response.json()\n      const updatedGenreList = data.movie_details.genres.map(eachGenre => ({\n        id: eachGenre.id,\n        name: eachGenre.name,\n      }))\n      const updatedSimilarMovies = data.movie_details.similar_movies.map(\n        eachMovie => ({\n          backdropPath: eachMovie.backdrop_path,\n          id: eachMovie.id,\n          posterPath: eachMovie.poster_path,\n          title: eachMovie.title,\n        }),\n      )\n      const updatedSpokenLanguages = data.movie_details.spoken_languages.map(\n        eachLanguage => ({\n          id: eachLanguage.id,\n          englishName: eachLanguage.english_name,\n        }),\n      )\n      const updatedData = {\n        adult: data.movie_details.adult,\n        backdropPath: data.movie_details.backdrop_path,\n        budget: data.movie_details.budget,\n        genres: updatedGenreList,\n        id: data.movie_details.id,\n        overview: data.movie_details.overview,\n        posterPath: data.movie_details.poster_path,\n        releaseDate: data.movie_details.release_date,\n        runtime: data.movie_details.runtime,\n        similarMovies: updatedSimilarMovies,\n        spokenLanguages: updatedSpokenLanguages,\n        title: data.movie_details.title,\n        voteAverage: data.movie_details.vote_average,\n        voteCount: data.movie_details.vote_count,\n      }\n      this.setState({\n        movieDetailsList: updatedData,\n        renderStatus: renderConstraints.success,\n      })\n    } else {\n      this.setState({renderStatus: renderConstraints.fail})\n    }\n  }\n\n  tryAgainMoviesData = () => {\n    this.getMovieDetails()\n  }\n\n  renderLoaderView = () => (\n    <>\n      <NavBar />\n      <div className=\"loader-container\" testid=\"loader\">\n        <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n      </div>\n    </>\n  )\n\n  renderFailureView = () => (\n    <>\n      <NavBar />\n      <FailurePage tryAgain={this.tryAgainMoviesData} />\n    </>\n  )\n\n  renderSuccessView = () => {\n    const {movieDetailsList} = this.state\n\n    const {\n      adult,\n      backdropPath,\n      budget,\n      genres,\n      overview,\n      releaseDate,\n      runtime,\n      similarMovies,\n      spokenLanguages,\n      title,\n      voteAverage,\n      voteCount,\n    } = movieDetailsList\n    const inHours = Math.floor(runtime / 60)\n    const inMinutes = runtime % 60\n    const runTimeInHoursAndMinutes = `${inHours}h ${inMinutes}m`\n    const certificateName = adult ? 'A' : 'U/A'\n    const releaseYear = format(new Date(releaseDate), 'yyyy')\n    const releaseDateFormat = format(new Date(releaseDate), 'do MMMM yyyy')\n    return (\n      <>\n        <div\n          style={{backgroundImage: `url(${backdropPath})`}}\n          className=\"movie-detail-page\"\n        >\n          <NavBar />\n          <div className=\"movie-detail-movie-page\">\n            <h1 className=\"title\">{title}</h1>\n            <div className=\"more-details\">\n              <p className=\"duration\">{runTimeInHoursAndMinutes}</p>\n              <p className=\"certificate\">{certificateName}</p>\n              <p className=\"release-year\">{releaseYear}</p>\n            </div>\n            <p className=\"over-view\">{overview}</p>\n            <button type=\"button\" className=\"play-btn\">\n              Play\n            </button>\n          </div>\n        </div>\n        <div className=\"additional-information\">\n          <div className=\"movie-info\">\n            <div className=\"info\">\n              <h1 className=\"info-heading\">Genres</h1>\n              <ul className=\"list-items\">\n                {genres.map(eachItem => (\n                  <GenreList eachItem={eachItem} key={eachItem.id} />\n                ))}\n              </ul>\n            </div>\n            <div className=\"info\">\n              <h1 className=\"info-heading\">Audio Available</h1>\n              <ul className=\"list-items\">\n                {spokenLanguages.map(eachItem => (\n                  <AvailableLanguages eachItem={eachItem} key={eachItem.id} />\n                ))}\n              </ul>\n            </div>\n            <div className=\"info\">\n              <h1 className=\"info-heading\">Rating Count</h1>\n              <p className=\"info-items info-name\">{voteCount}</p>\n              <h1 className=\"info-heading\">Rating Average</h1>\n              <p className=\"info-items info-name\">{voteAverage}</p>\n            </div>\n            <div className=\"info info1\">\n              <h1 className=\"info-heading\">Budget</h1>\n              <p className=\"info-items info-name\">{budget}</p>\n              <h1 className=\"info-heading\">Release Date</h1>\n              <p className=\"info-items info-name\">{releaseDateFormat}</p>\n            </div>\n          </div>\n          <div className=\"similar-movies-container\">\n            <h1 className=\"more-like-this-text\">More like this</h1>\n            <div className=\"similar-movies-list\">\n              {similarMovies.map(eachMovie => (\n                <SimilarMovies eachMovie={eachMovie} key={eachMovie.id} />\n              ))}\n            </div>\n          </div>\n          <Footer />\n        </div>\n      </>\n    )\n  }\n\n  renderSwitchView = () => {\n    const {renderStatus} = this.state\n    switch (renderStatus) {\n      case renderConstraints.loading:\n        return this.renderLoaderView()\n      case renderConstraints.success:\n        return this.renderSuccessView()\n      case renderConstraints.fail:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <>{this.renderSwitchView()}</>\n  }\n}\n\nexport default MovieDetails\n"]},"metadata":{},"sourceType":"module"}