{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieItemDetails/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Loader } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass MovieItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiStatus: apiStatusConstants.initial\n    };\n\n    this.getMovieItemDetails = async () => {\n      this.setState({\n        apiStatus: apiStatusConstants.inProgress\n      });\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      console.log(id);\n      const url = `https://apis.ccbp.in/movies-app/movies/${id}`;\n      const jwtToken = Cookies.get('jwt_token');\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n      const response = await fetch(url, options); // if (response.ok === true) {\n      //   const data = await response.json()\n      //   const updatedData = {\n      //     adult: data.movie_details.adult,\n      //     backdropPath: data.movie_details.backdrop_path,\n      //     budget: data.movie_details.budget,\n      //     genres: data.movie_details.genres.map(eachGenre => ({\n      //       id: eachGenre.id,\n      //       name: eachGenre.name,\n      //     })),\n      //     id: data.movie_details.id,\n      //     overview: data.movie_details.overview,\n      //     posterPath: data.movie_details.poster_path,\n      //     releaseDate: data.movie_details.release_date,\n      //     runtime: data.movie_details.runtime,\n      //     similarMovies: data.movie_details.similar_movies.map(eachMovie => ({\n      //       backdropPath: eachMovie.backdrop_path,\n      //       id: eachMovie.id,\n      //       posterPath: eachMovie.poster_path,\n      //       title: eachMovie.title,\n      //     })),\n      //   }\n      // }\n\n      const data = await response.json();\n      console.log(data);\n    };\n\n    this.renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-bg-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader-container\",\n        testid: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"TailSpin\",\n          color: \"#D81F26\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this);\n\n    this.renderApiStatus = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderMovieDetailsView();\n\n        case apiStatusConstants.failure:\n          return this.renderFailureView();\n\n        case apiStatusConstants.inProgress:\n          return this.renderLoadingView();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getMovieItemDetails();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), this.renderApiStatus()]\n    }, void 0, true);\n  }\n\n}\n\nexport default MovieItemDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieItemDetails/index.js"],"names":["Component","Cookies","Loader","apiStatusConstants","initial","success","failure","inProgress","MovieItemDetails","state","apiStatus","getMovieItemDetails","setState","match","props","params","id","console","log","url","jwtToken","get","options","method","headers","Authorization","response","fetch","data","json","renderLoadingView","renderApiStatus","renderMovieDetailsView","renderFailureView","componentDidMount","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,MAAR,QAAqB,sBAArB;;;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAE,SADgB;AAEzBC,EAAAA,OAAO,EAAE,SAFgB;AAGzBC,EAAAA,OAAO,EAAE,SAHgB;AAIzBC,EAAAA,UAAU,EAAE;AAJa,CAA3B;;AAOA,MAAMC,gBAAN,SAA+BR,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCS,KADuC,GAC/B;AAACC,MAAAA,SAAS,EAAEP,kBAAkB,CAACC;AAA/B,KAD+B;;AAAA,SAOvCO,mBAPuC,GAOjB,YAAY;AAChC,WAAKC,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAEP,kBAAkB,CAACI;AAA/B,OAAd;AACA,YAAM;AAACM,QAAAA;AAAD,UAAU,KAAKC,KAArB;AACA,YAAM;AAACC,QAAAA;AAAD,UAAWF,KAAjB;AACA,YAAM;AAACG,QAAAA;AAAD,UAAOD,MAAb;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEA,YAAMG,GAAG,GAAI,0CAAyCH,EAAG,EAAzD;AACA,YAAMI,QAAQ,GAAGnB,OAAO,CAACoB,GAAR,CAAY,WAAZ,CAAjB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASL,QAAS;AAD3B;AAFK,OAAhB;AAMA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAMG,OAAN,CAA5B,CAfgC,CAgBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACD,KAhDsC;;AAAA,SAkDvCE,iBAlDuC,GAkDnB,mBAClB;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,MAAM,EAAC,QAAzC;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,KAAK,EAAC,SAA9B;AAAwC,UAAA,MAAM,EAAE,EAAhD;AAAoD,UAAA,KAAK,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnDqC;;AAAA,SA8DvCC,eA9DuC,GA8DrB,MAAM;AACtB,YAAM;AAACrB,QAAAA;AAAD,UAAc,KAAKD,KAAzB;;AAEA,cAAQC,SAAR;AACE,aAAKP,kBAAkB,CAACE,OAAxB;AACE,iBAAO,KAAK2B,sBAAL,EAAP;;AACF,aAAK7B,kBAAkB,CAACG,OAAxB;AACE,iBAAO,KAAK2B,iBAAL,EAAP;;AACF,aAAK9B,kBAAkB,CAACI,UAAxB;AACE,iBAAO,KAAKuB,iBAAL,EAAP;;AACF;AACE,iBAAO,IAAP;AARJ;AAUD,KA3EsC;AAAA;;AAGvCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,mBAAL;AACD;;AAwEDwB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKJ,eAAL,EAFH;AAAA,oBADF;AAMD;;AApFsC;;AAuFzC,eAAevB,gBAAf","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Loader} from 'react-loader-spinner'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass MovieItemDetails extends Component {\n  state = {apiStatus: apiStatusConstants.initial}\n\n  componentDidMount() {\n    this.getMovieItemDetails()\n  }\n\n  getMovieItemDetails = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    console.log(id)\n\n    const url = `https://apis.ccbp.in/movies-app/movies/${id}`\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    // if (response.ok === true) {\n    //   const data = await response.json()\n    //   const updatedData = {\n    //     adult: data.movie_details.adult,\n    //     backdropPath: data.movie_details.backdrop_path,\n    //     budget: data.movie_details.budget,\n    //     genres: data.movie_details.genres.map(eachGenre => ({\n    //       id: eachGenre.id,\n    //       name: eachGenre.name,\n    //     })),\n    //     id: data.movie_details.id,\n    //     overview: data.movie_details.overview,\n    //     posterPath: data.movie_details.poster_path,\n    //     releaseDate: data.movie_details.release_date,\n    //     runtime: data.movie_details.runtime,\n    //     similarMovies: data.movie_details.similar_movies.map(eachMovie => ({\n    //       backdropPath: eachMovie.backdrop_path,\n    //       id: eachMovie.id,\n    //       posterPath: eachMovie.poster_path,\n    //       title: eachMovie.title,\n    //     })),\n    //   }\n    // }\n    const data = await response.json()\n    console.log(data)\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-bg-container\">\n      <div className=\"loader-container\" testid=\"loader\">\n        <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n      </div>\n    </div>\n  )\n\n  // renderMovieDetailsView = () => {\n  //     const\n  // }\n\n  renderApiStatus = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderMovieDetailsView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h1>hi</h1>\n        {this.renderApiStatus()}\n      </>\n    )\n  }\n}\n\nexport default MovieItemDetails\n"]},"metadata":{},"sourceType":"module"}