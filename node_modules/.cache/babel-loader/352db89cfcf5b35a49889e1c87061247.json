{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/Home/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Loader from 'react-loader-spinner';\nimport SliderItem from '../SliderItem';\nimport './index.css'; // import Header from '../Header'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst trendingApiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\nconst topRatedApiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n}; // const popularApiStatusConstants = {\n//   initial: 'INITIAL',\n//   success: 'SUCCESS',\n//   failure: 'FAILURE',\n//   inProgress: 'IN_PROGRESS',\n// }\n\nconst settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 4,\n  slidesToScroll: 4,\n  swipeToSlide: true,\n  responsive: [{\n    breakpoint: 1024,\n    settings: {\n      slidesToShow: 4,\n      slidesToScroll: 1\n    }\n  }, {\n    breakpoint: 400,\n    settings: {\n      slidesToShow: 3,\n      slidesToScroll: 1\n    }\n  }]\n};\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trendingMoviesList: [],\n      topRatedMoviesList: [],\n      trendingApiStatus: trendingApiStatusConstants.initial,\n      topRatedApiStatus: topRatedApiStatusConstants.initial // popularApiStatus: popularApiStatusConstants.inProgress,\n      // popularMoviesList: [],\n\n    };\n\n    this.getTrendingMovies = async () => {\n      this.setState({\n        trendingApiStatus: trendingApiStatusConstants.inProgress\n      });\n      const jwtToken = Cookies.get('jwt_token');\n      const url = 'https://apis.ccbp.in/movies-app/trending-movies';\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n      const response = await fetch(url, options);\n\n      if (response.ok === true) {\n        const data = await response.json();\n        console.log(data);\n        const updatedData = data.results.map(eachMovie => ({\n          backdropPath: eachMovie.backdrop_path,\n          id: eachMovie.id,\n          overview: eachMovie.overview,\n          posterPath: eachMovie.poster_path,\n          title: eachMovie.title\n        }));\n        this.setState({\n          trendingMoviesList: updatedData,\n          trendingApiStatus: trendingApiStatusConstants.success\n        });\n      } else {\n        this.setState({\n          trendingApiStatus: trendingApiStatusConstants.failure\n        });\n      }\n    };\n\n    this.getTopRatedMovies = async () => {\n      this.setState({\n        topRatedApiStatus: topRatedApiStatusConstants.inProgress\n      });\n      const jwtToken = Cookies.get('jwt_token');\n      const url = 'https://apis.ccbp.in/movies-app/top-rated-movies';\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n      const response = await fetch(url, options);\n\n      if (response.ok === true) {\n        const data = await response.json();\n        console.log(data);\n        const updatedData = data.results.map(eachMovie => ({\n          backdropPath: eachMovie.backdrop_path,\n          id: eachMovie.id,\n          overview: eachMovie.overview,\n          posterPath: eachMovie.poster_path,\n          title: eachMovie.title\n        }));\n        this.setState({\n          topRatedMoviesList: updatedData,\n          topRatedApiStatus: topRatedApiStatusConstants.success\n        });\n      } else {\n        this.setState({\n          topRatedApiStatus: topRatedApiStatusConstants.failure\n        });\n      }\n    };\n\n    this.renderTrendingLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      testid: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"TailSpin\",\n        color: \"#D81F26\",\n        height: 50,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this);\n\n    this.renderTopRatedLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      testid: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"TailSpin\",\n        color: \"#D81F26\",\n        height: 50,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this);\n\n    this.renderTrendingMoviesView = () => {\n      const {\n        trendingMoviesList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n          children: trendingMoviesList.map(eachMovie => /*#__PURE__*/_jsxDEV(SliderItem, {\n            sliderItemDetails: eachMovie\n          }, eachMovie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderTopRatedMoviesView = () => {\n      const {\n        topRatedMoviesList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n          children: topRatedMoviesList.map(eachMovie => /*#__PURE__*/_jsxDEV(SliderItem, {\n            sliderItemDetails: eachMovie\n          }, eachMovie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderTrendingApiStatus = () => {\n      const {\n        trendingApiStatus\n      } = this.state;\n\n      switch (trendingApiStatus) {\n        case trendingApiStatusConstants.success:\n          return this.renderTrendingMoviesView();\n\n        case trendingApiStatusConstants.failure:\n          return this.renderTrendingFailureView();\n\n        case trendingApiStatusConstants.inProgress:\n          return this.renderTrendingLoadingView();\n\n        default:\n          return null;\n      }\n    };\n\n    this.renderTopRatedApiStatus = () => {\n      const {\n        topRatedApiStatus\n      } = this.state;\n\n      switch (topRatedApiStatus) {\n        case trendingApiStatusConstants.success:\n          return this.renderTopRatedMoviesView();\n\n        case trendingApiStatusConstants.failure:\n          return this.renderTopRatedFailureView();\n\n        case trendingApiStatusConstants.inProgress:\n          return this.renderTopRatedLoadingView();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getTrendingMovies();\n    this.getTopRatedMovies();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-bg-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"movies-list-heading\",\n        children: \"Trending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), this.renderTrendingApiStatus(), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"movies-list-heading\",\n        children: \"Top Rated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), this.renderTopRatedApiStatus(), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"movies-list-heading\",\n        children: \"Originals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), this.renderTrendingApiStatus()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/Home/index.js"],"names":["Component","Cookies","Slider","Loader","SliderItem","trendingApiStatusConstants","initial","success","failure","inProgress","topRatedApiStatusConstants","settings","dots","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","responsive","breakpoint","Home","state","trendingMoviesList","topRatedMoviesList","trendingApiStatus","topRatedApiStatus","getTrendingMovies","setState","jwtToken","get","url","options","method","headers","Authorization","response","fetch","ok","data","json","console","log","updatedData","results","map","eachMovie","backdropPath","backdrop_path","id","overview","posterPath","poster_path","title","getTopRatedMovies","renderTrendingLoadingView","renderTopRatedLoadingView","renderTrendingMoviesView","renderTopRatedMoviesView","renderTrendingApiStatus","renderTrendingFailureView","renderTopRatedApiStatus","renderTopRatedFailureView","componentDidMount","render"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport Cookies from 'js-cookie'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport Loader from 'react-loader-spinner'\nimport SliderItem from '../SliderItem'\nimport './index.css'\n// import Header from '../Header'\n\nconst trendingApiStatusConstants = {\n    initial: 'INITIAL',\n    success: 'SUCCESS',\n    failure: 'FAILURE',\n    inProgress: 'IN_PROGRESS',\n}\n\nconst topRatedApiStatusConstants = {\n    initial: 'INITIAL',\n    success: 'SUCCESS',\n    failure: 'FAILURE',\n    inProgress: 'IN_PROGRESS',\n}\n\n// const popularApiStatusConstants = {\n//   initial: 'INITIAL',\n//   success: 'SUCCESS',\n//   failure: 'FAILURE',\n//   inProgress: 'IN_PROGRESS',\n// }\n\nconst settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    swipeToSlide: true,\n\n    responsive: [\n        {\n            breakpoint: 1024,\n            settings: {\n                slidesToShow: 4,\n                slidesToScroll: 1,\n            },\n        },\n        {\n            breakpoint: 400,\n            settings: {\n                slidesToShow: 3,\n                slidesToScroll: 1,\n            },\n        },\n    ],\n}\n\nclass Home extends Component {\n    state = {\n        trendingMoviesList: [],\n        topRatedMoviesList: [],\n        trendingApiStatus: trendingApiStatusConstants.initial,\n        topRatedApiStatus: topRatedApiStatusConstants.initial,\n        // popularApiStatus: popularApiStatusConstants.inProgress,\n        // popularMoviesList: [],\n    }\n\n    componentDidMount() {\n        this.getTrendingMovies()\n        this.getTopRatedMovies()\n    }\n\n    getTrendingMovies = async () => {\n        this.setState({ trendingApiStatus: trendingApiStatusConstants.inProgress })\n\n        const jwtToken = Cookies.get('jwt_token')\n        const url = 'https://apis.ccbp.in/movies-app/trending-movies'\n        const options = {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${jwtToken}`,\n            },\n        }\n        const response = await fetch(url, options)\n        if (response.ok === true) {\n            const data = await response.json()\n            console.log(data)\n            const updatedData = data.results.map(eachMovie => ({\n                backdropPath: eachMovie.backdrop_path,\n                id: eachMovie.id,\n                overview: eachMovie.overview,\n                posterPath: eachMovie.poster_path,\n                title: eachMovie.title,\n            }))\n\n            this.setState({\n                trendingMoviesList: updatedData,\n                trendingApiStatus: trendingApiStatusConstants.success,\n            })\n        } else {\n            this.setState({ trendingApiStatus: trendingApiStatusConstants.failure })\n        }\n    }\n\n    getTopRatedMovies = async () => {\n        this.setState({ topRatedApiStatus: topRatedApiStatusConstants.inProgress })\n\n        const jwtToken = Cookies.get('jwt_token')\n        const url = 'https://apis.ccbp.in/movies-app/top-rated-movies'\n        const options = {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${jwtToken}`,\n            },\n        }\n        const response = await fetch(url, options)\n        if (response.ok === true) {\n            const data = await response.json()\n            console.log(data)\n            const updatedData = data.results.map(eachMovie => ({\n                backdropPath: eachMovie.backdrop_path,\n                id: eachMovie.id,\n                overview: eachMovie.overview,\n                posterPath: eachMovie.poster_path,\n                title: eachMovie.title,\n            }))\n\n            this.setState({\n                topRatedMoviesList: updatedData,\n                topRatedApiStatus: topRatedApiStatusConstants.success,\n            })\n        } else {\n            this.setState({ topRatedApiStatus: topRatedApiStatusConstants.failure })\n        }\n    }\n\n    renderTrendingLoadingView = () => (\n        <div className=\"loader-container\" testid=\"loader\">\n            <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n        </div>\n    )\n\n    renderTopRatedLoadingView = () => (\n        <div className=\"loader-container\" testid=\"loader\">\n            <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n        </div>\n    )\n\n    renderTrendingMoviesView = () => {\n        const { trendingMoviesList } = this.state\n\n        return (\n            <div className=\"slider-container\">\n                <Slider {...settings}>\n                    {trendingMoviesList.map(eachMovie => (\n                        <SliderItem sliderItemDetails={eachMovie} key={eachMovie.id} />\n                    ))}\n                </Slider>\n            </div>\n        )\n    }\n\n    renderTopRatedMoviesView = () => {\n        const { topRatedMoviesList } = this.state\n\n        return (\n            <div className=\"slider-container\">\n                <Slider {...settings}>\n                    {topRatedMoviesList.map(eachMovie => (\n                        <SliderItem sliderItemDetails={eachMovie} key={eachMovie.id} />\n                    ))}\n                </Slider>\n            </div>\n        )\n    }\n\n    renderTrendingApiStatus = () => {\n        const { trendingApiStatus } = this.state\n\n        switch (trendingApiStatus) {\n            case trendingApiStatusConstants.success:\n                return this.renderTrendingMoviesView()\n            case trendingApiStatusConstants.failure:\n                return this.renderTrendingFailureView()\n            case trendingApiStatusConstants.inProgress:\n                return this.renderTrendingLoadingView()\n            default:\n                return null\n        }\n    }\n\n    renderTopRatedApiStatus = () => {\n        const { topRatedApiStatus } = this.state\n\n        switch (topRatedApiStatus) {\n            case trendingApiStatusConstants.success:\n                return this.renderTopRatedMoviesView()\n            case trendingApiStatusConstants.failure:\n                return this.renderTopRatedFailureView()\n            case trendingApiStatusConstants.inProgress:\n                return this.renderTopRatedLoadingView()\n            default:\n                return null\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"home-bg-container\">\n                <h1 className=\"movies-list-heading\">Trending</h1>\n                {this.renderTrendingApiStatus()}\n                <h1 className=\"movies-list-heading\">Top Rated</h1>\n                {this.renderTopRatedApiStatus()}\n                <h1 className=\"movies-list-heading\">Originals</h1>\n                {this.renderTrendingApiStatus()}\n            </div>\n        )\n    }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}