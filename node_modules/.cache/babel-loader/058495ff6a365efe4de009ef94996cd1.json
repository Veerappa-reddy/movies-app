{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieItemDetails/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass MovieItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieDetails: {},\n      apiStatus: apiStatusConstants.initial\n    };\n\n    this.getMovieItemDetails = async () => {\n      this.setState({\n        apiStatus: apiStatusConstants.inProgress\n      });\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      console.log(id);\n      const url = `https://apis.ccbp.in/movies-app/movies/${id}`;\n      const jwtToken = Cookies.get('jwt_token');\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n      const response = await fetch(url, options);\n\n      if (response.ok === true) {\n        const data = await response.json();\n        const updatedData = {\n          adult: data.movie_details.adult,\n          backdropPath: data.movie_details.backdrop_path,\n          budget: data.movie_details.budget,\n          genres: data.movie_details.genres.map(eachGenre => ({\n            id: eachGenre.id,\n            name: eachGenre.name\n          })),\n          id: data.movie_details.id,\n          overview: data.movie_details.overview,\n          posterPath: data.movie_details.poster_path,\n          releaseDate: data.movie_details.release_date,\n          runtime: data.movie_details.runtime,\n          similarMovies: data.movie_details.similar_movies.map(eachMovie => ({\n            backdropPath: eachMovie.backdrop_path,\n            id: eachMovie.id,\n            posterPath: eachMovie.poster_path,\n            title: eachMovie.title\n          })),\n          spokenLanguages: data.movie_details.spoken_languages.map(each => ({\n            id: each.id,\n            englishName: each.english_name\n          })),\n          title: data.movie_details.title,\n          voteAverage: data.movie_details.vote_average,\n          voteCount: data.movie_details.vote_count\n        };\n        this.setState({\n          movieDetails: updatedData,\n          apiStatus: apiStatusConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiStatusConstants.failure\n        });\n      }\n    };\n\n    this.renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-bg-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader-container\",\n        testid: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"TailSpin\",\n          color: \"#D81F26\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this);\n\n    this.renderMovieDetailsView = () => {\n      const {\n        movieDetails\n      } = this.state;\n      const {\n        backdropPath,\n        title\n      } = movieDetails;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: `url(${backdropPath})`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderApiStatus = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderMovieDetailsView();\n\n        case apiStatusConstants.failure:\n          return this.renderFailureView();\n\n        case apiStatusConstants.inProgress:\n          return this.renderLoadingView();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getMovieItemDetails();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), this.renderApiStatus()]\n    }, void 0, true);\n  }\n\n}\n\nexport default MovieItemDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieItemDetails/index.js"],"names":["Component","Cookies","Loader","apiStatusConstants","initial","success","failure","inProgress","MovieItemDetails","state","movieDetails","apiStatus","getMovieItemDetails","setState","match","props","params","id","console","log","url","jwtToken","get","options","method","headers","Authorization","response","fetch","ok","data","json","updatedData","adult","movie_details","backdropPath","backdrop_path","budget","genres","map","eachGenre","name","overview","posterPath","poster_path","releaseDate","release_date","runtime","similarMovies","similar_movies","eachMovie","title","spokenLanguages","spoken_languages","each","englishName","english_name","voteAverage","vote_average","voteCount","vote_count","renderLoadingView","renderMovieDetailsView","backgroundImage","renderApiStatus","renderFailureView","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass MovieItemDetails extends Component {\n  state = {movieDetails: {}, apiStatus: apiStatusConstants.initial}\n\n  componentDidMount() {\n    this.getMovieItemDetails()\n  }\n\n  getMovieItemDetails = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    console.log(id)\n\n    const url = `https://apis.ccbp.in/movies-app/movies/${id}`\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = {\n        adult: data.movie_details.adult,\n        backdropPath: data.movie_details.backdrop_path,\n        budget: data.movie_details.budget,\n        genres: data.movie_details.genres.map(eachGenre => ({\n          id: eachGenre.id,\n          name: eachGenre.name,\n        })),\n        id: data.movie_details.id,\n        overview: data.movie_details.overview,\n        posterPath: data.movie_details.poster_path,\n        releaseDate: data.movie_details.release_date,\n        runtime: data.movie_details.runtime,\n        similarMovies: data.movie_details.similar_movies.map(eachMovie => ({\n          backdropPath: eachMovie.backdrop_path,\n          id: eachMovie.id,\n          posterPath: eachMovie.poster_path,\n          title: eachMovie.title,\n        })),\n        spokenLanguages: data.movie_details.spoken_languages.map(each => ({\n          id: each.id,\n          englishName: each.english_name,\n        })),\n        title: data.movie_details.title,\n        voteAverage: data.movie_details.vote_average,\n        voteCount: data.movie_details.vote_count,\n      }\n      this.setState({\n        movieDetails: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-bg-container\">\n      <div className=\"loader-container\" testid=\"loader\">\n        <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n      </div>\n    </div>\n  )\n\n  renderMovieDetailsView = () => {\n    const {movieDetails} = this.state\n    const {backdropPath, title} = movieDetails\n\n    return (\n      <div style={{backgroundImage: `url(${backdropPath})`}}>\n        <h1>{title}</h1>\n      </div>\n    )\n  }\n\n  renderApiStatus = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderMovieDetailsView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h1>hi</h1>\n        {this.renderApiStatus()}\n      </>\n    )\n  }\n}\n\nexport default MovieItemDetails\n"]},"metadata":{},"sourceType":"module"}